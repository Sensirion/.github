name: syntax, static code analyis and build check for c drivers

on:
  workflow_call:
    inputs:
      run-environment:
        description: OS to run checks on
        type: string
        default: "ubuntu-22.04"
      examples:
        description: List of examples to build
        type: string
        default: '["example-usage"]'

jobs:
  code-analysis:
    runs-on: ${{ inputs.run-environment }}
    steps:
      - uses: actions/checkout@v4
      - uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: cppcheck clang-format
          version: 1.0
      - name: clang-format syntax-check
        run: find . -type f -iregex ".*\.\(c\|h\|cpp\|ino\)" -exec clang-format -i -style=file {} \; && git diff --exit-code
      - name: cppcheck static code analyis
        run: cppcheck --std=c89 --language=c --error-exitcode=1 --enable=warning,style,performance,portability --suppress=unreadVariable -i sample-implementations/ .

  build-examples:
    runs-on: ${{ inputs.run-environment }}
    strategy:
      fail-fast: false
      matrix:
        example-folder: ${{ fromJSON(inputs.examples) }}
    steps:
      - uses: actions/checkout@v4
      - name: runbuild
        run: cd ${{ matrix.example-folder }} && make
      