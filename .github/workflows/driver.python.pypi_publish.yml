name: Build python package, create github release and publish to pypi

on:
  workflow_call:
    inputs:
      run-environments:
        description: List of OS to run test on
        type: string
        default: '["ubuntu-22.04", "macos-latest", "windows-latest"]'
      python-versions:
        description: Python versions to test
        type: string
        default: '["3.11"]'
    secrets:
      PYPI_API_TOKEN:
        required: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJSON(inputs.python-versions) }}
        os: ${{ fromJSON(inputs.run-environments) }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install the project dependencies
        run: |
            python -m pip install -e . wheel
      - name: Build Packages
        run: python setup.py sdist bdist_wheel
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          overwrite: true
  publish-pypi:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    permissions:
      id-token: write
    runs-on: ubuntu-22.04
    needs:
      - build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
  github-release:
    name: Create GitHub Release and add signature for python packages
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs:
      - build
      - publish-pypi
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "$(gh release view '${{ github.ref_name }}' 2>&1)" == "release not found" ]]; then
            gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --notes ""
          fi
      - name: Upload artifacts to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Upload release artifacts before the signing, such that artifacts are still uploaded if signing fails
        run: |
          gh release upload '${{ github.ref_name }}' dist/** --repo '${{ github.repository }}'
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@f514d46b907ebcd5bedc05145c03b69c1edd8b46
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Upload signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # upload sigstore-produced signatures and certificates from dist
        run: |
          gh release upload '${{ github.ref_name }}' dist/*.sigstore.json --repo '${{ github.repository }}'
  create-driver-index-release:
    needs: github-release
    uses: sensirion/.github/.github/workflows/driver_index.common.create_release.yml@main
    secrets:
      DI_BASIC_AUTH_TOKEN: ${{ secrets.DI_BASIC_AUTH_TOKEN }}
    with:
      DI_BASE_URL: ${{ vars.DI_BASE_URL }}
